#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

{{/*
Job descriptor
*/}}
{{- $keystorePvc := print "keystore-pvc-" ( include "eric-eo-evnfm-crypto.name" . ) "-stateful-set-0" -}}
{{- $securePvc := print "secure-pvc-" ( include "eric-eo-evnfm-crypto.name" . ) "-stateful-set-0" -}}
{{- $persistentVolume := (lookup "v1" "PersistentVolumeClaim" .Release.Namespace $keystorePvc) -}}
{{- if $persistentVolume }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-eo-evnfm-crypto.name" . }}-migration-cleanup-hook
  labels: {{- include "eric-eo-evnfm-crypto.labels.extended-defaults" . | nindent 4 }}
  annotations:
    {{- include "eric-eo-evnfm-crypto.annotations" . | nindent 4 }}
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 2
  template:
    spec:
      restartPolicy: Never
      {{- if include "eric-eo-evnfm-crypto.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-eo-evnfm-crypto.pullSecrets" . }}
      {{- end }}
      serviceAccountName: {{ template "eric-eo-evnfm-crypto.name" . }}-migration-cleanup-sa
      {{- if or .Values.tolerations (and .Values.global .Values.global.tolerations) }}
      tolerations: {{ include "eric-eo-evnfm-crypto.tolerations" . | indent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds.cryptoService | int }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ template "eric-eo-evnfm-crypto.cleanupImagePath" . }}
          imagePullPolicy: {{ template "eric-eo-evnfm-crypto.imagePullPolicy" . }}
          command: ["/bin/sh","-c"]
          args: ["kubectl delete pvc {{ $securePvc }} -n {{ .Release.Namespace }}; kubectl delete pvc {{ $keystorePvc }} -n {{ .Release.Namespace }}"]
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 284760
            runAsGroup: 284760
            capabilities:
              drop:
                - all
{{- end }}